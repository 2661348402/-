package summer_day07;
/*
 * 给定一个已按照 升序排列  的整数数组 numbers ，请你从数组中找出两个数满足相加之和等于目标数 target 。

函数应该以长度为 2 的整数数组的形式返回这两个数的下标值。numbers 的下标 从 1 开始计数 ，所以答案数组应当满足 1 <= answer[0] < answer[1] <= numbers.length 。

你可以假设每个输入只对应唯一的答案，而且你不可以重复使用相同的元素。
示例 1：

输入：numbers = [2,7,11,15], target = 9
输出：[1,2]
解释：2 与 7 之和等于目标数 9 。因此 index1 = 1, index2 = 2 。
 */
//方法一：暴力破解
//class Solution {
//    public int[] twoSum(int[] numbers, int target) {
//    	int n= numbers.length;
//    	for(int i=0;i<n;i++) {
//    		for(int j=i+1;j<n;j++) {
//    			if(numbers[i]+numbers[j]==target) {
//    				int []twosum= {i+1,j+1};
//    				return twosum;
//    			} 
//    		}
//    	}
//    	return null;
//    }
//}
//方法二：双指针（缩小范围）
class Solution {
    public int[] twoSum(int[] numbers, int target) {
    	int left=0,right=numbers.length-1;
    	while(left<right) {
    		if(numbers[left]+numbers[right]<target) {
    			left++;
    		}
    		else if(numbers[left]+numbers[right]>target) {
    			right--;
    		}
    		else {
    			int[]sum={left+1,right+1};
    			return sum;
    		}
    	}
    	return null;
    }
}






















